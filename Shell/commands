#!/bin/bash

#------------------
## Bash Functions
#------------------


# Handles Grapejuice's Custom Mouse Patch
buyrum() {
	
	dependencies=(p7zip wget grapejuice-git wine wine-mono wine-gecko)
	for pkg in "${dependencies[@]}"; do
		if ! yay -Q "$pkg"; then
			yay -S "$pkg"
		fi
	done
	
	cd /tmp || exit
	if sudo find /tmp -name 'debuntu-wine-tkg-staging-fsync-git*' & [ -f install.py ]; then
		read -rqs $'?\nWine patch found, might be old.\nUse it? (y/N)'
		if [[ "${REPLY}" == 'y' ]]; then
			python3 install.py
		fi
	fi
	
	wget https://pastebin.com/raw/5SeVb005 -O install.py && python3 install.py
	cd || exit
}



# Compiles C and runs executable
compile() {

	main_dir='/home/fnklazo/Documents/Code/C'
	src_dir="Source"
	out_dir="Executables"
	src_file=$1
	out_file=${1%.*}

	read -rqst 1 $'?\nUse Default Directories? (y/N)\n'
	if [[ "${REPLY}" == 'n' ]]; then
		printf $'?\nEnter an Absolute Path.\n'
		read -r '?Main Directory: ' main_dir
		read -rqs $'?\nUse Sub-directories? (y/N)\n'		
		
		if [[ "${REPLY}" == 'y' ]]; then
			printf $'?\nEnter Relative Paths. (No /)\n'
			read -r '?Source Directory: ' src_dir
			read -r '?Output Directory: ' out_dir	
		fi
	fi
	
	echo "Using $main_dir"

	src_dir="$main_dir/$src_dir"; out_dir="$main_dir/$out_dir"
	gcc "$src_dir/$src_file" -o "$out_dir/$out_file"
		
	read -rqst 5 $'?\n'"Run $out_file? (y/N)"$'\n' && \
		if [[ "${REPLY}" == 'y' ]]; then
			"$out_dir/$out_file"
		fi
}



# Fixes Wrong Latte Dock Icons
fixdockicons() {
	
	sed -i 's/^StartupWMClass.*/StartupWMClass=code-oss/g' /usr/share/applications/code-oss.desktop
	sed -i 's/^StartupWMClass.*/StartupWMClass=Steam/g' /usr/share/applications/Steam.desktop
}



#heysisters
hey() {

	#read -q '?Hey, I work. Cool.' yesorno
	#echo "\n$yesorno"

	echo -n "Type something and hit space: ";
	read -r '-d ';
	echo "";
	echo "You typed ${REPLY}"

}
